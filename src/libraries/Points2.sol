// SPDX-License-Identifier: Unlicense
pragma solidity >=0.8.0;

library Points2 {
    uint256 constant length = 64;
    bytes public constant bodyHex =
        hex
    bytes public constant glintsHex =
        hex

    function body(uint256 _i) internal pure returns (string[2] memory) {
        uint256 pos = _i * 6;
        bytes memory x = new bytes(3);
        bytes memory y = new bytes(3);
        x[0] = bodyHex[pos];
        x[1] = bodyHex[pos + 1];
        x[2] = bodyHex[pos + 2];
        y[0] = bodyHex[pos + 3];
        y[1] = bodyHex[pos + 4];
        y[2] = bodyHex[pos + 5];
        return [string(x), string(y)];
    }

    function glint(uint256 _i) internal pure returns (string[2] memory) {
        uint256 pos = _i * 10;
        bytes memory x = new bytes(6);
        bytes memory y = new bytes(6);
        x[0] = glintsHex[pos];
        x[1] = glintsHex[pos + 1];
        x[2] = glintsHex[pos + 2];
        x[3] = ".";
        x[4] = glintsHex[pos + 3];
        x[5] = glintsHex[pos + 4];
        y[0] = glintsHex[pos + 5];
        y[1] = glintsHex[pos + 6];
        y[2] = glintsHex[pos + 7];
        y[3] = ".";
        y[4] = glintsHex[pos + 8];
        y[5] = glintsHex[pos + 9];
        return [string(x), string(y)];
    }
}
